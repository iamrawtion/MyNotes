Puppet:
- Unhappy with CFEngine, built puppet.
- Easier to use and configure than CFEngine
- Use Ruby like DSL
- Object oriented, declarative (Do this and this as it fits)
- DSL - Domain Specific Language, designed for specific task and cant be used for other tasks
- Pull based
- Only Config mgmt
- Code:
   package: { “httpd”: 
     ensure => “installed”,
   } 
   service: { “httpd”:
     ensure => “running”,
     enable => true,
     require => Package[“httpd”],
     subscribe => File[“httpd”],
   }
- Available both Opensource and Enterprise paid version
- Written in Ruby.
- Important Puppet features are only available in the paid version.
- Has more than 2000 pre-built configs.
- Supports multiple platforms

Chef:
- Unhapy with Puppet's determinitic by default ordering
- Ruby like DSL
- Designed to mix ops and dev - Infra as code
- Functional and Impertative (Do this then this...)
- DSL - Domain Specific Language, designed for specific task and cant be used for other tasks
- Pull based
- Only Config mgmt
- Code:
   package “httpd”
   template “httpd” do
     source “httpd.conf.erb”
     path “/etc/httpd/conf/httpd.conf” 
     action :create 
   end 
   service “apache2” do 
     action [:start, :enable] 
   end 
- Available as opensource and Enterprise paid version
- Written in Ruby and is easily customizable too.
- Has around 800 modules available to be used free.
- Installation is extremely quick and easy.
- Supports features like text based searching and support for multiple environments.
- Has a CLI, UI, testing mode, etc.

Salt:
- Designed for remote execution. Config mgmt added later
- Speed/flexibility/ease/scale
- Based on data/dsl
- Object oriented, declarative (Do this and this as it fits)
- Non DSL and DSL both
- Push and Pull based
- Only Config mgmt and remote execution
- Code:
   httpd: 
     pkg: 
      - install 
      service: 
       - running 
       - enable: True 
       - requires: 
       - file: httpd 
     file: 
       - managed 
       - name: /etc/httpd/conf/httpd.conf 
       - source: salt://httpd/httpd.conf # stored in /srv/salt/httpd/httpd.conf 
       - requires: 
       - pkg: httpd 
- Not opensource
- 

Ansible:
1. No agent required only sshd
2. Designed for adhoc task execution and config mgmt
3. Simplicity
4. Functional and Impertative (Do this and this...)
5. Non DSL
6. Push based
7. Only Config mgmt and remote execution
8. Code:
   hosts: all 
   tasks: 
    - name: 1. Install Apache 
      yum: name=httpd state=present 
    - name: 2. Copy Apache Config 
      template: src=httpd.conf.j2 dest=/etc/httpd/conf/httpd.conf 
    - name: 3. Start Apache Service 
      service: name=httpd state=running enabled=yes 


